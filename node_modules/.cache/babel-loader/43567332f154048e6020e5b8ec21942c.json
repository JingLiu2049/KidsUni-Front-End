{"ast":null,"code":"var _jsxFileName = \"D:\\\\My repository\\\\Self-projects\\\\Children Uni rebuilding\\\\KidsUni-Front-End\\\\src\\\\pages\\\\contents\\\\Events\\\\EventsList\\\\index.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  filters: [{\n    text: 'Joe',\n    value: 'Joe'\n  }, {\n    text: 'Jim',\n    value: 'Jim'\n  }, {\n    text: 'Submenu',\n    value: 'Submenu',\n    children: [{\n      text: 'Green',\n      value: 'Green'\n    }, {\n      text: 'Black',\n      value: 'Black'\n    }]\n  }],\n  // specify the condition of filtering result\n  // here is that finding the name started with `value`\n  onFilter: (value, record) => record.name.indexOf(value) === 0,\n  sorter: (a, b) => a.name.length - b.name.length,\n  sortDirections: ['descend']\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  defaultSortOrder: 'descend',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  filters: [{\n    text: 'London',\n    value: 'London'\n  }, {\n    text: 'New York',\n    value: 'New York'\n  }],\n  onFilter: (value, record) => record.address.indexOf(value) === 0\n}];\nexport default function EventsList(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Events List\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_c = EventsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"sources":["D:/My repository/Self-projects/Children Uni rebuilding/KidsUni-Front-End/src/pages/contents/Events/EventsList/index.jsx"],"names":["columns","title","dataIndex","filters","text","value","children","onFilter","record","name","indexOf","sorter","a","b","length","sortDirections","defaultSortOrder","age","address","EventsList","props"],"mappings":";;AAEA,MAAMA,OAAO,GAAG,CACZ;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,IAAI,EAAE,KADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADO,EAKP;AACED,IAAAA,IAAI,EAAE,KADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALO,EASP;AACED,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,KAAK,EAAE,SAFT;AAGEC,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,IAAI,EAAE,OADR;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADQ,EAKR;AACED,MAAAA,IAAI,EAAE,OADR;AAEEC,MAAAA,KAAK,EAAE;AAFT,KALQ;AAHZ,GATO,CAHX;AA2BE;AACA;AACAE,EAAAA,QAAQ,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmBA,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBL,KAApB,MAA+B,CA7B9D;AA8BEM,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,IAAF,CAAOK,MAAP,GAAgBD,CAAC,CAACJ,IAAF,CAAOK,MA9B3C;AA+BEC,EAAAA,cAAc,EAAE,CAAC,SAAD;AA/BlB,CADY,EAkCZ;AACEd,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,SAAS,EAAE,KAFb;AAGEc,EAAAA,gBAAgB,EAAE,SAHpB;AAIEL,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,GAAF,GAAQJ,CAAC,CAACI;AAJ9B,CAlCY,EAwCZ;AACEhB,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,SAAS,EAAE,SAFb;AAGEC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADO,EAKP;AACED,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALO,CAHX;AAaEE,EAAAA,QAAQ,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmBA,MAAM,CAACU,OAAP,CAAeR,OAAf,CAAuBL,KAAvB,MAAkC;AAbjE,CAxCY,CAAhB;AA4DA,eAAe,SAASc,UAAT,CAAoBC,KAApB,EAA0B;AACrC,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;KAJuBD,U","sourcesContent":["import { Table } from 'antd';\r\n\r\nconst columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      filters: [\r\n        {\r\n          text: 'Joe',\r\n          value: 'Joe',\r\n        },\r\n        {\r\n          text: 'Jim',\r\n          value: 'Jim',\r\n        },\r\n        {\r\n          text: 'Submenu',\r\n          value: 'Submenu',\r\n          children: [\r\n            {\r\n              text: 'Green',\r\n              value: 'Green',\r\n            },\r\n            {\r\n              text: 'Black',\r\n              value: 'Black',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      // specify the condition of filtering result\r\n      // here is that finding the name started with `value`\r\n      onFilter: (value, record) => record.name.indexOf(value) === 0,\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n      sortDirections: ['descend'],\r\n    },\r\n    {\r\n      title: 'Age',\r\n      dataIndex: 'age',\r\n      defaultSortOrder: 'descend',\r\n      sorter: (a, b) => a.age - b.age,\r\n    },\r\n    {\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n      filters: [\r\n        {\r\n          text: 'London',\r\n          value: 'London',\r\n        },\r\n        {\r\n          text: 'New York',\r\n          value: 'New York',\r\n        },\r\n      ],\r\n      onFilter: (value, record) => record.address.indexOf(value) === 0,\r\n    },\r\n  ];\r\n\r\n\r\n  \r\n\r\nexport default function EventsList(props){\r\n    return(\r\n        <div>Events List</div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}