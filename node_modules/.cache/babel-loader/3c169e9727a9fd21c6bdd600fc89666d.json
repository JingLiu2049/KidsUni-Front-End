{"ast":null,"code":"import \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\n\nvar _jsxFileName = \"D:\\\\My repository\\\\Self-projects\\\\Children Uni rebuilding\\\\KidsUni-Front-End\\\\src\\\\components\\\\SideNav\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport logo from '../../assets/images/logo.jpeg';\nimport { withRouter } from 'react-router-dom';\nimport './sideNav.less';\nimport { MailOutlined } from '@ant-design/icons';\nimport navList, { rootSubmenuKeys } from '../../configs/navConfigs';\nimport { useComponentWillMount } from '../../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SideNav(props) {\n  _s();\n\n  const {\n    SubMenu\n  } = _Menu; // get currentPath\n\n  let currentPath = props.location.pathname; // declare the initial opened sub menu key based on current path\n\n  let initOpenSub = null;\n  useComponentWillMount(() => {\n    initOpenSub = `/${currentPath.split('/').filter(i => i)[0]}`;\n  }); // set initial opened sub menu \n\n  const [openKeys, setOpenKeys] = React.useState([initOpenSub]); // function used to handle menu item click\n\n  const handleClick = e => {\n    props.history.push(e.key);\n  }; // fucntion used to open and close sub-menu\n\n\n  const onOpenChange = keys => {\n    console.log('openKeys', openKeys);\n    const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\n\n    if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n      console.log('keys', keys);\n      setOpenKeys(keys);\n    } else {\n      console.log('else', latestOpenKey ? [latestOpenKey] : ['nothing']);\n      setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\n    }\n  }; // function used to create menu based on data from navConfigs.js\n\n\n  const getNavNodes = navList => {\n    return navList.map(item => {\n      if (item.children) {\n        return /*#__PURE__*/_jsxDEV(SubMenu, {\n          icon: /*#__PURE__*/_jsxDEV(MailOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 41\n          }, this),\n          title: item.title,\n          className: \"navItem\",\n          children: getNavNodes(item.children)\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(_Menu.Item, {\n          className: \"weishenme\",\n          icon: /*#__PURE__*/_jsxDEV(MailOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 65\n          }, this),\n          children: item.title\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n\n  const navNotes = getNavNodes(navList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"siderWrp\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topLogo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"children uni\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Menu, {\n      style: {\n        width: \"100%\",\n        backgroundColor: \"transparent\"\n      },\n      selectedKeys: [currentPath],\n      mode: \"inline\",\n      className: \"menu\",\n      theme: \"dark\",\n      onClick: handleClick,\n      onOpenChange: onOpenChange,\n      openKeys: openKeys,\n      children: navNotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SideNav, \"afywRpcKcFfWHMTSt0GLcoPR5lA=\", false, function () {\n  return [useComponentWillMount];\n});\n\n_c = SideNav;\nexport default _c2 = withRouter(SideNav);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SideNav\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/My repository/Self-projects/Children Uni rebuilding/KidsUni-Front-End/src/components/SideNav/index.jsx"],"names":["React","logo","withRouter","MailOutlined","navList","rootSubmenuKeys","useComponentWillMount","SideNav","props","SubMenu","currentPath","location","pathname","initOpenSub","split","filter","i","openKeys","setOpenKeys","useState","handleClick","e","history","push","key","onOpenChange","keys","console","log","latestOpenKey","find","indexOf","getNavNodes","map","item","children","title","navNotes","width","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport logo from '../../assets/images/logo.jpeg'\r\nimport { withRouter } from 'react-router-dom'\r\nimport './sideNav.less'\r\nimport { Menu } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport navList,{rootSubmenuKeys} from '../../configs/navConfigs'\r\nimport {useComponentWillMount} from '../../utils/hooks'\r\n\r\n\r\n\r\n\r\n\r\nfunction SideNav(props) {\r\n  const { SubMenu } = Menu;\r\n  // get currentPath\r\n  let currentPath = props.location.pathname\r\n\r\n  // declare the initial opened sub menu key based on current path\r\n  let initOpenSub = null\r\n  useComponentWillMount(()=>{\r\n    initOpenSub = `/${currentPath.split('/').filter(i => i)[0]}`\r\n  })\r\n  // set initial opened sub menu \r\n  const [openKeys, setOpenKeys] = React.useState([initOpenSub]);\r\n\r\n  // function used to handle menu item click\r\n  const handleClick = e => {\r\n    props.history.push(e.key)\r\n  }\r\n\r\n  // fucntion used to open and close sub-menu\r\n  const onOpenChange = keys => {\r\n    console.log('openKeys',openKeys)\r\n    const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\r\n    if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n      console.log('keys',keys)\r\n      setOpenKeys(keys);\r\n    } else {\r\n      console.log('else',latestOpenKey ? [latestOpenKey] : ['nothing'])\r\n      setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\r\n    }\r\n  };\r\n\r\n  // function used to create menu based on data from navConfigs.js\r\n  const getNavNodes = navList => {\r\n    return navList.map(item => {\r\n      if (item.children) {\r\n        return (\r\n          <SubMenu key={item.key} icon={<MailOutlined />} title={item.title} className=\"navItem\">\r\n            {getNavNodes(item.children)}\r\n          </SubMenu>\r\n        )\r\n      } else {\r\n        return (\r\n          <Menu.Item className=\"weishenme\" key={item.key} icon={<MailOutlined />} >{item.title}</Menu.Item>\r\n        )\r\n      }\r\n    })\r\n  }\r\n  const navNotes = getNavNodes(navList)\r\n\r\n  return (\r\n    <div className=\"siderWrp\" >\r\n      <div className=\"topLogo\" >\r\n        <img src={logo} alt=\"children uni\" />\r\n      </div >\r\n\r\n      <Menu\r\n        style={{ width: \"100%\", backgroundColor: \"transparent\" }}\r\n        selectedKeys={[currentPath]}\r\n        mode=\"inline\"\r\n        className=\"menu\"\r\n        theme='dark'\r\n        onClick={handleClick}\r\n        onOpenChange={onOpenChange}\r\n        openKeys={openKeys}\r\n      >\r\n        {navNotes}\r\n      </Menu>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(SideNav)\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}