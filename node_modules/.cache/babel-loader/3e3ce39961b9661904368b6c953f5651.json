{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\n\nvar _jsxFileName = \"D:\\\\My repository\\\\Self-projects\\\\Children Uni rebuilding\\\\KidsUni-Front-End\\\\src\\\\pages\\\\contents\\\\Events\\\\EventsList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useComponentDidMount } from '../../../../utils/hooks';\nimport { reqEvents, reqDeleteEvent } from '../../../../ajax';\nimport { getRespFunc } from '../../../../utils/globalFunc';\nimport LinkButton from '../../../../components/LinkButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsList(props) {\n  _s();\n\n  function onChange(pagination, filters, sorter, extra) {\n    console.log('params', pagination, filters, sorter, extra);\n  } // declear the state eventsData to manage all the data of events\n\n\n  const [eventsData, setEventsData] = useState([]); // declear the state loading for Table to display before response get back\n\n  const [loading, setLoading] = useState(true); // function used to send request and set the state eventsData \n\n  const getData = getRespFunc(reqEvents, setEventsData, setLoading); // call the function while the component did mount\n\n  useComponentDidMount(getData);\n\n  const getFilterItem = (arr, column) => {\n    let uniqueItems = arr.reduce((prev, cur) => prev.includes(cur[column]) ? prev : [...prev, cur[column]], []);\n    return uniqueItems.map(i => ({\n      text: i,\n      value: i\n    }));\n  };\n\n  const filterTopic = getFilterItem(eventsData, 'topic');\n  const fiterLocation = getFilterItem(eventsData, 'location');\n  const title = new Column('Title', '15%');\n  const topic = new Column('Topic', 'auto', null, filterTopic);\n  const location = new Column('Location', '15%', null, fiterLocation);\n  const note = new Column('Note');\n  const time = new Column('Time', '15%');\n  const action = new Column('Action');\n\n  time.sorter = (a, b) => {\n    const getTime = obj => obj.time.replace(/\\D/g, \"\") * 1;\n\n    return getTime(a) - getTime(b);\n  };\n\n  action.render = (text, record) => {\n    const handleEdit = () => {// console.log('record', record)\n    };\n\n    const handleDelete = async key => {\n      getRespFunc(reqDeleteEvent, setEventsData, setLoading, key._id)();\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n        onClick: handleEdit,\n        children: [\"Edit \", record._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => handleDelete(record),\n        children: /*#__PURE__*/_jsxDEV(LinkButton, {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  };\n\n  const columns = [title, topic, time, location, note, action];\n  return /*#__PURE__*/_jsxDEV(_Table, {\n    columns: columns,\n    dataSource: eventsData,\n    onChange: onChange,\n    rowKey: \"_id\",\n    loading: loading,\n    pagination: {\n      defaultPageSize: 12,\n      total: eventsData.length,\n      showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EventsList, \"Yno/LRYoP+2dJMcXQ2M1OvTUgJ0=\", false, function () {\n  return [useComponentDidMount];\n});\n\n_c = EventsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"sources":["D:/My repository/Self-projects/Children Uni rebuilding/KidsUni-Front-End/src/pages/contents/Events/EventsList/index.jsx"],"names":["useState","useComponentDidMount","reqEvents","reqDeleteEvent","getRespFunc","LinkButton","EventsList","props","onChange","pagination","filters","sorter","extra","console","log","eventsData","setEventsData","loading","setLoading","getData","getFilterItem","arr","column","uniqueItems","reduce","prev","cur","includes","map","i","text","value","filterTopic","fiterLocation","title","Column","topic","location","note","time","action","a","b","getTime","obj","replace","render","record","handleEdit","handleDelete","key","_id","columns","defaultPageSize","total","length","showTotal","range"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { Table, Space, Popconfirm } from 'antd';\r\n\r\nimport { useComponentDidMount } from '../../../../utils/hooks';\r\nimport { reqEvents, reqDeleteEvent } from '../../../../ajax';\r\nimport { getRespFunc} from '../../../../utils/globalFunc';\r\nimport LinkButton from '../../../../components/LinkButton';\r\n\r\n\r\n\r\nexport default function EventsList(props) {\r\n    function onChange(pagination, filters, sorter, extra) {\r\n        console.log('params', pagination, filters, sorter, extra);\r\n    }\r\n    // declear the state eventsData to manage all the data of events\r\n    const [eventsData, setEventsData] = useState([])\r\n    // declear the state loading for Table to display before response get back\r\n    const [loading, setLoading] = useState(true)\r\n    // function used to send request and set the state eventsData \r\n    const getData = getRespFunc(reqEvents, setEventsData,setLoading)\r\n    // call the function while the component did mount\r\n    useComponentDidMount(getData)\r\n\r\n    const getFilterItem = (arr,column) => {\r\n       let uniqueItems = arr.reduce((prev,cur)=>prev.includes(cur[column])?prev:[...prev,cur[column]],[])\r\n       return uniqueItems.map(i=>({text:i,value:i}))\r\n    }\r\n    \r\n\r\n    const filterTopic = getFilterItem(eventsData,'topic')\r\n    const fiterLocation = getFilterItem(eventsData,'location')\r\n\r\n    const title = new Column('Title','15%')\r\n    const topic = new Column('Topic','auto',null,filterTopic)\r\n    const location = new Column('Location','15%',null,fiterLocation )\r\n    const note = new Column('Note')\r\n    const time = new Column('Time','15%')\r\n    const action = new Column('Action')\r\n    time.sorter = (a, b) => {\r\n        const getTime = obj => obj.time.replace(/\\D/g, \"\") * 1\r\n        return getTime(a) - getTime(b)\r\n    }\r\n    action.render = (text, record) => {\r\n        const handleEdit = () => {\r\n            // console.log('record', record)\r\n        }\r\n        const handleDelete = async (key) => {\r\n            getRespFunc(reqDeleteEvent, setEventsData,setLoading,key._id)()\r\n        };\r\n        return (\r\n            <Space size=\"middle\">\r\n                <LinkButton onClick={handleEdit} >Edit {record._id}</LinkButton>\r\n                <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record)}>\r\n                    <LinkButton >Delete</LinkButton>\r\n                </Popconfirm>\r\n            </Space>\r\n        )\r\n    }\r\n\r\n\r\n    const columns = [\r\n        title,\r\n        topic,\r\n        time,\r\n        location,\r\n        note,\r\n        action\r\n    ];\r\n\r\n    return (\r\n        <Table\r\n            columns={columns}\r\n            dataSource={eventsData}\r\n            onChange={onChange}\r\n            rowKey=\"_id\"\r\n            loading={loading}\r\n            pagination={{\r\n                defaultPageSize: 12, total: eventsData.length,\r\n                showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`\r\n            }}\r\n        />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}