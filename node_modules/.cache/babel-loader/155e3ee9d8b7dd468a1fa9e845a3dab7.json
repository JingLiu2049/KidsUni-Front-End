{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\n\nvar _jsxFileName = \"D:\\\\My repository\\\\Self-projects\\\\Children Uni rebuilding\\\\KidsUni-Front-End\\\\src\\\\pages\\\\contents\\\\Events\\\\EventsList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useComponentDidMount } from '../../../../utils/hooks';\nimport { reqEvents, reqDeleteEvent } from '../../../../ajax';\nimport { getRespFunc } from '../../../../utils/globalFunc';\nimport LinkButton from '../../../../components/LinkButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsList(props) {\n  _s();\n\n  // function onChange(pagination, filters, sorter, extra) {\n  //     // console.log('params', pagination, filters, sorter, extra);\n  // }\n  // declear the state eventsData to manage all the data of events\n  const [eventsData, setEventsData] = useState([]); // declear the state loading for Table to display before response get back\n\n  const [loading, setLoading] = useState(true); // function used to send request and set the state eventsData \n\n  const getData = getRespFunc(reqEvents, setEventsData, setLoading); // call the function while the component did mount\n\n  useComponentDidMount(getData);\n\n  class Column {\n    constructor(title, dataIndex, width = 'auto', ellipsis = true, filters = null) {\n      this.onFilter = (value, record) => record.title.indexOf(value) !== -1;\n\n      this.title = title;\n      this.dataIndex = dataIndex;\n      this.width = width;\n      this.ellipsis = ellipsis;\n      this.filters = filters;\n    }\n\n  }\n\n  const title = new Column('Title', 'title', '15%', null, [{\n    text: 'test1',\n    value: 'test1'\n  }, {\n    text: 'test2',\n    value: 'test2'\n  }]);\n  const topic = new Column('Topic', 'topic', 'auto', null, [{\n    text: 'test1',\n    value: 'test1'\n  }, {\n    text: 'test2',\n    value: 'test2'\n  }]);\n  const time = new Column('Time', 'time', '15%', null);\n\n  time.sorter = (a, b) => {\n    const getTime = obj => obj.time.replace(/\\D/g, \"\") * 1;\n\n    return getTime(a) - getTime(b);\n  };\n\n  const location = new Column('Location', 'location', '15%', n);\n  const columns = [title, topic, time, {\n    title: 'Location',\n    dataIndex: 'location',\n    width: '15%',\n    ellipsis: true,\n    filters: [{\n      text: 'test1',\n      value: 'test1'\n    }, {\n      text: 'test1',\n      value: 'test2'\n    }],\n    onFilter: (value, record) => record.location.indexOf(value) !== -1\n  }, {\n    title: 'Note',\n    dataIndex: 'note',\n    ellipsis: true,\n    width: 'auto'\n  }, {\n    title: 'Action',\n    dataIndex: 'action',\n    width: '15%',\n    ellipsis: true,\n    render: (text, record) => {\n      const handleEdit = () => {\n        console.log('record', record);\n      };\n\n      const handleDelete = async key => {\n        getRespFunc(reqDeleteEvent, setEventsData, setLoading, key._id)();\n      };\n\n      return /*#__PURE__*/_jsxDEV(_Space, {\n        size: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n          onClick: handleEdit,\n          children: [\"Edit \", record._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(_Popconfirm, {\n          title: \"Sure to delete?\",\n          onConfirm: () => handleDelete(record),\n          children: /*#__PURE__*/_jsxDEV(LinkButton, {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Table, {\n    columns: columns,\n    dataSource: eventsData // onChange={onChange}\n    ,\n    rowKey: \"_id\",\n    loading: loading,\n    pagination: {\n      defaultPageSize: 12,\n      total: eventsData.length,\n      showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EventsList, \"Yno/LRYoP+2dJMcXQ2M1OvTUgJ0=\", false, function () {\n  return [useComponentDidMount];\n});\n\n_c = EventsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"sources":["D:/My repository/Self-projects/Children Uni rebuilding/KidsUni-Front-End/src/pages/contents/Events/EventsList/index.jsx"],"names":["useState","useComponentDidMount","reqEvents","reqDeleteEvent","getRespFunc","LinkButton","EventsList","props","eventsData","setEventsData","loading","setLoading","getData","Column","constructor","title","dataIndex","width","ellipsis","filters","onFilter","value","record","indexOf","text","topic","time","sorter","a","b","getTime","obj","replace","location","n","columns","render","handleEdit","console","log","handleDelete","key","_id","defaultPageSize","total","length","showTotal","range"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { Table, Space, Popconfirm } from 'antd';\r\n\r\nimport { useComponentDidMount } from '../../../../utils/hooks';\r\nimport { reqEvents, reqDeleteEvent } from '../../../../ajax';\r\nimport { getRespFunc } from '../../../../utils/globalFunc';\r\nimport LinkButton from '../../../../components/LinkButton';\r\n\r\n\r\n\r\nexport default function EventsList(props) {\r\n    // function onChange(pagination, filters, sorter, extra) {\r\n    //     // console.log('params', pagination, filters, sorter, extra);\r\n    // }\r\n    // declear the state eventsData to manage all the data of events\r\n    const [eventsData, setEventsData] = useState([])\r\n    // declear the state loading for Table to display before response get back\r\n    const [loading, setLoading] = useState(true)\r\n    // function used to send request and set the state eventsData \r\n    const getData = getRespFunc(reqEvents, setEventsData,setLoading)\r\n    // call the function while the component did mount\r\n    useComponentDidMount(getData)\r\n\r\n\r\n    class Column{\r\n        constructor(title,dataIndex, width='auto',ellipsis=true,filters=null){\r\n            this.title = title;\r\n            this.dataIndex = dataIndex;\r\n            this.width = width;\r\n            this.ellipsis=ellipsis;\r\n            this.filters=filters;\r\n        }\r\n        onFilter = (value, record) => record.title.indexOf(value) !== -1\r\n        \r\n    }\r\n       \r\n    const title = new Column('Title','title','15%',null,[{text:'test1',value:'test1'},{text:'test2',value:'test2'}])\r\n    const topic = new Column('Topic','topic','auto',null,[{text:'test1',value:'test1'},{text:'test2',value:'test2'}])\r\n    const time = new Column('Time','time','15%',null)\r\n    time.sorter = (a, b) => {\r\n        const getTime = obj => obj.time.replace(/\\D/g, \"\") * 1\r\n        return getTime(a) - getTime(b)\r\n    }\r\n    const location = new Column('Location','location','15%',n)\r\n    const columns = [\r\n        title,\r\n        topic,\r\n        time,\r\n        {\r\n            title: 'Location',\r\n            dataIndex: 'location',\r\n            width: '15%',\r\n            ellipsis: true,\r\n            filters: [\r\n                {\r\n                    text: 'test1',\r\n                    value: 'test1',\r\n                },\r\n                {\r\n                    text: 'test1',\r\n                    value: 'test2',\r\n                },\r\n            ],\r\n            onFilter: (value, record) => record.location.indexOf(value) !== -1,\r\n\r\n        },\r\n        {\r\n            title: 'Note',\r\n            dataIndex: 'note',\r\n            ellipsis: true,\r\n            width: 'auto'\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            width: '15%',\r\n            ellipsis: true,\r\n            render: (text, record) => {\r\n                const handleEdit = () => {\r\n                    console.log('record', record)\r\n                }\r\n                const handleDelete = async (key) => {\r\n                    getRespFunc(reqDeleteEvent, setEventsData,setLoading,key._id)()\r\n                };\r\n                return (\r\n                    <Space size=\"middle\">\r\n                        <LinkButton onClick={handleEdit} >Edit {record._id}</LinkButton>\r\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record)}>\r\n                            <LinkButton >Delete</LinkButton>\r\n                        </Popconfirm>\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Table\r\n            columns={columns}\r\n            dataSource={eventsData}\r\n            // onChange={onChange}\r\n            rowKey=\"_id\"\r\n            loading={loading}\r\n            pagination={{\r\n                defaultPageSize: 12, total: eventsData.length,\r\n                showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`\r\n            }}\r\n        />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}