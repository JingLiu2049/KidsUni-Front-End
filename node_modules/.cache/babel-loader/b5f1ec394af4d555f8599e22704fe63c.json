{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nvar _jsxFileName = \"D:\\\\My repository\\\\Self-projects\\\\Children Uni rebuilding\\\\KidsUni-Front-End\\\\src\\\\pages\\\\contents\\\\Events\\\\EventsList\\\\index.jsx\";\nimport LinkButton from '../../../../components/LinkButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Title',\n  dataIndex: 'title',\n  //   filters: [\n  //     {\n  //       text: 'Joe',\n  //       value: 'Joe',\n  //     },\n  //     {\n  //       text: 'Jim',\n  //       value: 'Jim',\n  //     },\n  //     {\n  //       text: 'Submenu',\n  //       value: 'Submenu',\n  //       children: [\n  //         {\n  //           text: 'Green',\n  //           value: 'Green',\n  //         },\n  //         {\n  //           text: 'Black',\n  //           value: 'Black',\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // specify the condition of filtering result\n  // here is that finding the name started with `value`\n  //   onFilter: (value, record) => record.name.indexOf(value) === 0,\n  sorter: (a, b) => a.name.length - b.name.length,\n  sortDirections: ['descend']\n}, {\n  title: 'Topic',\n  dataIndex: 'topic',\n  defaultSortOrder: 'descend',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: 'Time',\n  dataIndex: 'time' //   filters: [\n  //     {\n  //       text: 'London',\n  //       value: 'London',\n  //     },\n  //     {\n  //       text: 'New York',\n  //       value: 'New York',\n  //     },\n  //   ],\n  //   onFilter: (value, record) => record.address.indexOf(value) === 0,\n\n}, {\n  title: 'Location',\n  dataIndex: 'location'\n}, {\n  title: 'Note',\n  dataIndex: 'note'\n}, {\n  title: 'Action',\n  dataIndex: 'action',\n  render: (text, record) => {\n    const handleEdit = () => {\n      console.log('record', record);\n    };\n\n    const handleDelete = key => {\n      // const dataSource = [dataSource];\n      // this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\n      console.log(key);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n        onClick: handleEdit,\n        children: [\"Edit \", record._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(_Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => handleDelete(record),\n        children: /*#__PURE__*/_jsxDEV(LinkButton, {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n}];\nconst data = [{\n  _id: '1',\n  title: 'John Brown',\n  topic: '32',\n  time: 'New York No. 1 Lake Park',\n  location: 'lincoln uni',\n  note: 'aaaa'\n}, {\n  _id: '2',\n  title: 'John Brown',\n  topic: '32',\n  time: 'New York No. 1 Lake Park',\n  location: 'lincoln uni',\n  note: 'aaaa'\n}];\nexport default function EventsList(props) {\n  function onChange(pagination, filters, sorter, extra) {\n    console.log('params', pagination, filters, sorter, extra);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Table, {\n    columns: columns,\n    dataSource: data,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n_c = EventsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"sources":["D:/My repository/Self-projects/Children Uni rebuilding/KidsUni-Front-End/src/pages/contents/Events/EventsList/index.jsx"],"names":["LinkButton","columns","title","dataIndex","sorter","a","b","name","length","sortDirections","defaultSortOrder","age","render","text","record","handleEdit","console","log","handleDelete","key","_id","data","topic","time","location","note","EventsList","props","onChange","pagination","filters","extra"],"mappings":"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","sourcesContent":["import { Table,Space,Popconfirm } from 'antd';\r\n\r\nimport LinkButton from '../../../../components/LinkButton';\r\n\r\nconst columns = [\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'title',\r\n    //   filters: [\r\n    //     {\r\n    //       text: 'Joe',\r\n    //       value: 'Joe',\r\n    //     },\r\n    //     {\r\n    //       text: 'Jim',\r\n    //       value: 'Jim',\r\n    //     },\r\n    //     {\r\n    //       text: 'Submenu',\r\n    //       value: 'Submenu',\r\n    //       children: [\r\n    //         {\r\n    //           text: 'Green',\r\n    //           value: 'Green',\r\n    //         },\r\n    //         {\r\n    //           text: 'Black',\r\n    //           value: 'Black',\r\n    //         },\r\n    //       ],\r\n    //     },\r\n    //   ],\r\n      // specify the condition of filtering result\r\n      // here is that finding the name started with `value`\r\n    //   onFilter: (value, record) => record.name.indexOf(value) === 0,\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n      sortDirections: ['descend'],\r\n    },\r\n    {\r\n      title: 'Topic',\r\n      dataIndex: 'topic',\r\n      defaultSortOrder: 'descend',\r\n      sorter: (a, b) => a.age - b.age,\r\n    },\r\n    {\r\n      title: 'Time',\r\n      dataIndex: 'time',\r\n    //   filters: [\r\n    //     {\r\n    //       text: 'London',\r\n    //       value: 'London',\r\n    //     },\r\n    //     {\r\n    //       text: 'New York',\r\n    //       value: 'New York',\r\n    //     },\r\n    //   ],\r\n    //   onFilter: (value, record) => record.address.indexOf(value) === 0,\r\n    },\r\n    {\r\n        title: 'Location',\r\n        dataIndex: 'location',\r\n\r\n    },\r\n    {\r\n        title: 'Note',\r\n        dataIndex: 'note',\r\n    },\r\n    {\r\n        title: 'Action',\r\n        dataIndex: 'action',\r\n        render: (text, record) => {\r\n            const handleEdit =()=>{\r\n                console.log('record',record)\r\n            }\r\n            const handleDelete = (key) => {\r\n                // const dataSource = [dataSource];\r\n                // this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\r\n                console.log(key)\r\n              };\r\n            return(\r\n            <Space size=\"middle\">\r\n              <LinkButton onClick={handleEdit} >Edit {record._id}</LinkButton>\r\n              <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record)}>\r\n              <LinkButton >Delete</LinkButton>\r\n              </Popconfirm>\r\n            </Space>\r\n            )\r\n            \r\n\r\n        }\r\n    },\r\n  ];\r\n\r\n  const data = [\r\n    {\r\n      _id: '1',\r\n      title: 'John Brown',\r\n      topic: '32',\r\n      time: 'New York No. 1 Lake Park',\r\n      location:'lincoln uni',\r\n      note:'aaaa'\r\n    },\r\n    {\r\n        _id: '2',\r\n        title: 'John Brown',\r\n        topic: '32',\r\n        time: 'New York No. 1 Lake Park',\r\n        location:'lincoln uni',\r\n        note:'aaaa'\r\n      },\r\n  ];\r\n\r\n\r\n\r\nexport default function EventsList(props){\r\n    function onChange(pagination, filters, sorter, extra) {\r\n        console.log('params', pagination, filters, sorter, extra);\r\n      }\r\n    return(\r\n        <Table columns={columns} dataSource={data} onChange={onChange} />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}