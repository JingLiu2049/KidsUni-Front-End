{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\n\nvar _jsxFileName = \"D:\\\\My repository\\\\Self-projects\\\\Children Uni rebuilding\\\\KidsUni-Front-End\\\\src\\\\pages\\\\contents\\\\Events\\\\EventsList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useComponentDidMount } from '../../../../utils/hooks';\nimport { reqEvents } from '../../../../ajax';\nimport LinkButton from '../../../../components/LinkButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsList(props) {\n  _s();\n\n  // function onChange(pagination, filters, sorter, extra) {\n  //     // console.log('params', pagination, filters, sorter, extra);\n  // }\n  const [eventsData, setEventsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const getData = async () => {\n    const result = await reqEvents(); // const result = response.data\n\n    setLoading(true);\n\n    if (result.status === 1) {\n      setLoading(false);\n      setEventsData(result.data);\n    } else {\n      setLoading(false);\n\n      _message.error(result.msg);\n    }\n  };\n\n  useComponentDidMount(getData);\n  return /*#__PURE__*/_jsxDEV(_Table, {\n    columns: columns,\n    dataSource: eventsData // onChange={onChange}\n    ,\n    rowKey: \"_id\",\n    loading: loading,\n    pagination: {\n      defaultPageSize: 12,\n      total: eventsData.length,\n      showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EventsList, \"Yno/LRYoP+2dJMcXQ2M1OvTUgJ0=\", false, function () {\n  return [useComponentDidMount];\n});\n\n_c = EventsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"sources":["D:/My repository/Self-projects/Children Uni rebuilding/KidsUni-Front-End/src/pages/contents/Events/EventsList/index.jsx"],"names":["useState","useComponentDidMount","reqEvents","LinkButton","EventsList","props","eventsData","setEventsData","loading","setLoading","getData","result","status","data","error","msg","columns","defaultPageSize","total","length","showTotal","range"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;;AAIA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC;AACA;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAMU,OAAO,GAAG,YAAU;AACtB,UAAMC,MAAM,GAAG,MAAMT,SAAS,EAA9B,CADsB,CAElB;;AACAO,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAIE,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AACrBH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,aAAa,CAACI,MAAM,CAACE,IAAR,CAAb;AACH,KAHD,MAGO;AACHJ,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,eAAQK,KAAR,CAAcH,MAAM,CAACI,GAArB;AACH;AACJ,GAXL;;AAYId,EAAAA,oBAAoB,CAACS,OAAD,CAApB;AAMJ,sBACI;AACI,IAAA,OAAO,EAAEM,OADb;AAEI,IAAA,UAAU,EAAEV,UAFhB,CAGI;AAHJ;AAII,IAAA,MAAM,EAAC,KAJX;AAKI,IAAA,OAAO,EAAEE,OALb;AAMI,IAAA,UAAU,EAAE;AACRS,MAAAA,eAAe,EAAE,EADT;AACaC,MAAAA,KAAK,EAAEZ,UAAU,CAACa,MAD/B;AAERC,MAAAA,SAAS,EAAE,CAACF,KAAD,EAAQG,KAAR,KAAmB,GAAEA,KAAK,CAAC,CAAD,CAAI,IAAGA,KAAK,CAAC,CAAD,CAAI,OAAMH,KAAM;AAFzD;AANhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GArCuBd,U;UAkBhBH,oB;;;KAlBgBG,U","sourcesContent":["import { useState } from 'react';\r\nimport { Table, Space, Popconfirm,message } from 'antd';\r\n\r\nimport { useComponentDidMount } from '../../../../utils/hooks';\r\nimport { reqEvents } from '../../../../ajax';\r\nimport LinkButton from '../../../../components/LinkButton';\r\n\r\n\r\n\r\nexport default function EventsList(props) {\r\n    // function onChange(pagination, filters, sorter, extra) {\r\n    //     // console.log('params', pagination, filters, sorter, extra);\r\n    // }\r\n    const [eventsData, setEventsData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const getData = async ()=>{\r\n        const result = await reqEvents()\r\n            // const result = response.data\r\n            setLoading(true)\r\n            if (result.status === 1) {\r\n                setLoading(false)\r\n                setEventsData(result.data)\r\n            } else {\r\n                setLoading(false)\r\n                message.error(result.msg)\r\n            }\r\n        };\r\n        useComponentDidMount(getData)\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Table\r\n            columns={columns}\r\n            dataSource={eventsData}\r\n            // onChange={onChange}\r\n            rowKey=\"_id\"\r\n            loading={loading}\r\n            pagination={{\r\n                defaultPageSize: 12, total: eventsData.length,\r\n                showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`\r\n            }}\r\n        />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}