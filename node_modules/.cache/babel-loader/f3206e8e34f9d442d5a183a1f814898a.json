{"ast":null,"code":"import \"antd/es/breadcrumb/style\";\nimport _Breadcrumb from \"antd/es/breadcrumb\";\nvar _jsxFileName = \"D:\\\\My repository\\\\Children Uni rebuilding\\\\front-end\\\\src\\\\components\\\\Header\\\\SubNav\\\\index.jsx\";\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TopNav(props) {\n  const currentPath = props.location.pathname;\n  console.log('currentpath', currentPath);\n  let pathHead = currentPath.split(\"/\").filter(i => i)[0];\n  const linkMap = props.ru;\n\n  if (pathHead !== 'dashboard') {\n    return /*#__PURE__*/_jsxDEV(_Breadcrumb, {\n      children: [/*#__PURE__*/_jsxDEV(_Breadcrumb.Item, {\n        children: pathHead\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), linkMap.map(item => {\n        return /*#__PURE__*/_jsxDEV(_Breadcrumb.Item, {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: item.path,\n            children: [\" \", item.title, \"  \"]\n          }, item.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Breadcrumb, {\n      children: /*#__PURE__*/_jsxDEV(_Breadcrumb.Item, {\n        children: pathHead\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  } //     return(\n  //         <Breadcrumb>\n  //     <Breadcrumb.Item>Students</Breadcrumb.Item>\n  //     <Breadcrumb.Item>List</Breadcrumb.Item>\n  //     <Breadcrumb.Item>Add</Breadcrumb.Item>\n  //     <Breadcrumb.Item>Upload Spreadsheet</Breadcrumb.Item>\n  //     {/* <Breadcrumb.Item>\n  //       <a href=\"\">Application Center</a>\n  //     </Breadcrumb.Item>\n  //     <Breadcrumb.Item>\n  //       <a href=\"\">Application List</a>\n  //     </Breadcrumb.Item>\n  //     <Breadcrumb.Item>An Application</Breadcrumb.Item> */}\n  //   </Breadcrumb>\n  //     )\n\n}\n\n_c = TopNav;\nexport default _c2 = withRouter(TopNav);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TopNav\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/My repository/Children Uni rebuilding/front-end/src/components/Header/SubNav/index.jsx"],"names":["NavLink","withRouter","TopNav","props","currentPath","location","pathname","console","log","pathHead","split","filter","i","linkMap","ru","map","item","path","title","key"],"mappings":";;;AAAA,SAAOA,OAAP,EAAgBC,UAAhB,QAAiC,kBAAjC;;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAClB,QAAMC,WAAW,GAAGD,KAAK,CAACE,QAAN,CAAeC,QAAnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BJ,WAA1B;AACA,MAAIK,QAAQ,GAAIL,WAAW,CAACM,KAAZ,CAAkB,GAAlB,EAAuBC,MAAvB,CAA8BC,CAAC,IAAEA,CAAjC,EAAoC,CAApC,CAAhB;AACA,QAAMC,OAAO,GAACV,KAAK,CAACW,EAApB;;AACA,MAAGL,QAAQ,KAAG,WAAd,EAA0B;AACtB,wBACI;AAAA,8BACJ,oBAAY,IAAZ;AAAA,kBAAkBA;AAAlB;AAAA;AAAA;AAAA;AAAA,cADI,EAGAI,OAAO,CAACE,GAAR,CAAYC,IAAI,IAAE;AACd,4BACI,oBAAY,IAAZ;AAAA,iCACA,QAAC,OAAD;AAAS,YAAA,EAAE,EAAEA,IAAI,CAACC,IAAlB;AAAA,4BAA0CD,IAAI,CAACE,KAA/C;AAAA,aAA6BF,IAAI,CAACG,GAAlC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OAND,CAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAhBD,MAgBK;AACD,wBACI;AAAA,6BACJ,oBAAY,IAAZ;AAAA,kBAAkBV;AAAlB;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GA3BiB,CA6BtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC;;KA5CQP,M;AA8CT,qBAAeD,UAAU,CAACC,MAAD,CAAzB","sourcesContent":["import{NavLink, withRouter} from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\n\r\nfunction TopNav(props){\r\n    const currentPath = props.location.pathname\r\n    console.log('currentpath',currentPath)\r\n    let pathHead  = currentPath.split(\"/\").filter(i=>i)[0]\r\n    const linkMap=props.ru\r\n    if(pathHead!=='dashboard'){\r\n        return(\r\n            <Breadcrumb>\r\n        <Breadcrumb.Item>{pathHead}</Breadcrumb.Item>\r\n        {\r\n            linkMap.map(item=>{\r\n                return(\r\n                    <Breadcrumb.Item>\r\n                    <NavLink to={item.path} key={item.key} > {item.title}  </NavLink>\r\n                    </Breadcrumb.Item>\r\n                )\r\n            })\r\n        }\r\n        </Breadcrumb>\r\n        )\r\n\r\n    }else{\r\n        return(\r\n            <Breadcrumb>\r\n        <Breadcrumb.Item>{pathHead}</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        )\r\n    }\r\n\r\n//     return(\r\n//         <Breadcrumb>\r\n//     <Breadcrumb.Item>Students</Breadcrumb.Item>\r\n//     <Breadcrumb.Item>List</Breadcrumb.Item>\r\n//     <Breadcrumb.Item>Add</Breadcrumb.Item>\r\n//     <Breadcrumb.Item>Upload Spreadsheet</Breadcrumb.Item>\r\n//     {/* <Breadcrumb.Item>\r\n//       <a href=\"\">Application Center</a>\r\n//     </Breadcrumb.Item>\r\n//     <Breadcrumb.Item>\r\n//       <a href=\"\">Application List</a>\r\n//     </Breadcrumb.Item>\r\n//     <Breadcrumb.Item>An Application</Breadcrumb.Item> */}\r\n//   </Breadcrumb>\r\n//     )\r\n}\r\n\r\nexport default withRouter(TopNav)"]},"metadata":{},"sourceType":"module"}