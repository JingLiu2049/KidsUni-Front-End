{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\n\nvar _jsxFileName = \"D:\\\\My repository\\\\Self-projects\\\\Children Uni rebuilding\\\\KidsUni-Front-End\\\\src\\\\pages\\\\contents\\\\Events\\\\EventsList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useComponentDidMount } from '../../../../utils/hooks';\nimport { reqEvents, reqDeleteEvent } from '../../../../ajax';\nimport { getRespFunc, Column } from '../../../../utils/globalFunc';\nimport LinkButton from '../../../../components/LinkButton';\nimport EventForm from '../EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsList(props) {\n  _s();\n\n  function onChange(pagination, filters, sorter, extra) {// console.log('params', pagination, filters, sorter, extra);\n  } // declear the state eventsData to manage all the data of events\n\n\n  const [eventsData, setEventsData] = useState([]); // declear the state loading for Table to display before response get back\n\n  const [loading, setLoading] = useState(true);\n  const [totalPage] = useState(eventsData.length); // function used to send request and set the state eventsData \n\n  const getData = getRespFunc(reqEvents, setEventsData, setLoading); // call the function while the component did mount\n\n  useComponentDidMount(getData);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const getFilterItem = (arr, column) => {\n    let uniqueItems = arr.reduce((prev, cur) => prev.includes(cur[column]) ? prev : [...prev, cur[column]], []);\n    return uniqueItems.map(i => ({\n      text: i,\n      value: i\n    }));\n  };\n\n  const filterTopic = getFilterItem(eventsData, 'topic');\n  const fiterLocation = getFilterItem(eventsData, 'location');\n  const title = new Column('Title', '15%');\n  const topic = new Column('Topic', 'auto', null, filterTopic);\n  const location = new Column('Location', '15%', null, fiterLocation);\n  const note = new Column('Note');\n  const time = new Column('Time', '15%');\n  const action = new Column('Action');\n\n  time.sorter = (a, b) => {\n    const getTime = obj => obj.time.replace(/\\D/g, \"\") * 1;\n\n    return getTime(a) - getTime(b);\n  };\n\n  action.render = (text, record) => {\n    let eventID = null;\n\n    const showModal = key => {\n      setIsModalVisible(true);\n      console.warn(key);\n      eventID = key._id;\n    };\n\n    const handleCancel = () => {\n      setIsModalVisible(false);\n    };\n\n    const handleDelete = async key => {\n      getRespFunc(reqDeleteEvent, setEventsData, setLoading, key._id)();\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n        onClick: () => showModal(record),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => handleDelete(record),\n        children: /*#__PURE__*/_jsxDEV(LinkButton, {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  };\n\n  const columns = [title, topic, time, location, note, action];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Table, {\n      columns: columns,\n      dataSource: eventsData,\n      onChange: onChange,\n      rowKey: \"_id\",\n      loading: loading,\n      pagination: {\n        defaultPageSize: 12,\n        total: totalPage,\n        showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n      title: \"Basic Modal\",\n      visible: isModalVisible,\n      onCancel: handleCancel,\n      maskStyle: {\n        backgroundColor: \"rgba(255,255,255,0.1)\"\n      },\n      width: \"80%\",\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(EventForm, {\n        eventID: eventID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EventsList, \"SDx8tU2644EjHN0MFwLkewq5iUA=\", false, function () {\n  return [useComponentDidMount];\n});\n\n_c = EventsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"sources":["D:/My repository/Self-projects/Children Uni rebuilding/KidsUni-Front-End/src/pages/contents/Events/EventsList/index.jsx"],"names":["useState","useComponentDidMount","reqEvents","reqDeleteEvent","getRespFunc","Column","LinkButton","EventForm","EventsList","props","onChange","pagination","filters","sorter","extra","eventsData","setEventsData","loading","setLoading","totalPage","length","getData","isModalVisible","setIsModalVisible","getFilterItem","arr","column","uniqueItems","reduce","prev","cur","includes","map","i","text","value","filterTopic","fiterLocation","title","topic","location","note","time","action","a","b","getTime","obj","replace","render","record","eventID","showModal","key","console","warn","_id","handleCancel","handleDelete","columns","defaultPageSize","total","showTotal","range","backgroundColor"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { Table, Space, Popconfirm, Modal } from 'antd';\r\n\r\nimport { useComponentDidMount } from '../../../../utils/hooks';\r\nimport { reqEvents, reqDeleteEvent } from '../../../../ajax';\r\nimport { getRespFunc, Column } from '../../../../utils/globalFunc';\r\nimport LinkButton from '../../../../components/LinkButton';\r\nimport EventForm from '../EventForm'\r\n\r\n\r\n\r\nexport default function EventsList(props) {\r\n    function onChange(pagination, filters, sorter, extra) {\r\n        // console.log('params', pagination, filters, sorter, extra);\r\n    }\r\n    // declear the state eventsData to manage all the data of events\r\n    const [eventsData, setEventsData] = useState([])\r\n    // declear the state loading for Table to display before response get back\r\n    const [loading, setLoading] = useState(true)\r\n    const [totalPage] = useState(eventsData.length)\r\n    // function used to send request and set the state eventsData \r\n    const getData = getRespFunc(reqEvents, setEventsData, setLoading)\r\n    // call the function while the component did mount\r\n    useComponentDidMount(getData)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n    const getFilterItem = (arr, column) => {\r\n        let uniqueItems = arr.reduce((prev, cur) => prev.includes(cur[column]) ? prev : [...prev, cur[column]], [])\r\n        return uniqueItems.map(i => ({ text: i, value: i }))\r\n    }\r\n\r\n    const filterTopic = getFilterItem(eventsData, 'topic')\r\n    const fiterLocation = getFilterItem(eventsData, 'location')\r\n\r\n    const title = new Column('Title', '15%')\r\n    const topic = new Column('Topic', 'auto', null, filterTopic)\r\n    const location = new Column('Location', '15%', null, fiterLocation)\r\n    const note = new Column('Note')\r\n    const time = new Column('Time', '15%')\r\n    const action = new Column('Action')\r\n    time.sorter = (a, b) => {\r\n        const getTime = obj => obj.time.replace(/\\D/g, \"\") * 1\r\n        return getTime(a) - getTime(b)\r\n    }\r\n    action.render = (text, record) => {\r\n        let eventID = null\r\n        const showModal = (key) => {\r\n            setIsModalVisible(true);\r\n            console.warn(key)\r\n            eventID = key._id\r\n            \r\n        };\r\n\r\n        const handleCancel = () => {\r\n            setIsModalVisible(false);\r\n        };\r\n\r\n        const handleDelete = async (key) => {\r\n            getRespFunc(reqDeleteEvent, setEventsData, setLoading, key._id)()\r\n        };\r\n        return (\r\n            <Space size=\"middle\">\r\n                <LinkButton onClick={()=> showModal(record)} >Edit</LinkButton>\r\n                <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record)}>\r\n                    <LinkButton >Delete</LinkButton>\r\n                </Popconfirm>\r\n                \r\n            </Space>\r\n        )\r\n    }\r\n\r\n\r\n    const columns = [\r\n        title,\r\n        topic,\r\n        time,\r\n        location,\r\n        note,\r\n        action\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n        <Table\r\n            columns={columns}\r\n            dataSource={eventsData}\r\n            onChange={onChange}\r\n            rowKey=\"_id\"\r\n            loading={loading}\r\n            pagination={{\r\n                defaultPageSize: 12, total: totalPage,\r\n                showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`\r\n            }}\r\n        />\r\n        <Modal title=\"Basic Modal\" visible={isModalVisible} onCancel={handleCancel}\r\n                    maskStyle={{ backgroundColor: \"rgba(255,255,255,0.1)\" }}\r\n                    width=\"80%\"\r\n                    footer={null}>\r\n\r\n                    <EventForm eventID={eventID} />\r\n                </Modal >\r\n                </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}